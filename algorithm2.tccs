%% TCCs associated with theory algorithm2
%% This file was automatically generated by PVS, please **do not modify** by hand.
algorithm2_TCCS: THEORY BEGIN

	% Subtype TCC generated (at line 42, column 12) for  n
	% expected type  naturalnumber
	  % proved
	concatenate_recur_TCC1: OBLIGATION
	FORALL (n: int): n >= 0
	
	% Termination TCC generated (at line 37, column 8) for
	% concatenate_recur(concat(str_base, num), num, (n - 1), FALSE)
	  % untried
	concatenate_recur_TCC2: OBLIGATION
	FORALL (n: int, l: bool): NOT n <= 0 AND l = FALSE IMPLIES (n - 1) < n
	
	% Termination TCC generated (at line 40, column 8) for
	% concatenate_recur(concat(num, str_base), num, (n - 1), TRUE)
	  % proved
	concatenate_recur_TCC3: OBLIGATION
	FORALL (n: int, l: bool): NOT n <= 0 AND NOT l = FALSE IMPLIES (n - 1) < n
	
	% Subtype TCC generated (at line 83, column 27) for  x
	% expected type  int
	  % proved
	case1_TCC1: OBLIGATION
	FORALL (x: real): rational_pred(x) AND integer_pred(x)
	
	% Termination TCC generated (at line 103, column 8) for
	% case2summation((top - 1), (sum + (3 ^ top)))
	  % proved
	case2summation_TCC1: OBLIGATION
	FORALL (top: int): NOT top = 1 AND NOT top = 0 IMPLIES (top - 1) < top
	
	% The subtype TCC (at line 105, column 12) in decl case2summation for  top
	% expected type  naturalnumber
	% The subtype TCC (at line 121, column 28) in decl case2 for  x
	% expected type  int
	% Termination TCC generated (at line 142, column 8) for
	% case3subloop(j, i, (t - 1), concat(str, "1"))
	  % untried
	case3subloop_TCC1: OBLIGATION
	FORALL (i, t: int): NOT t = -1 AND t = i IMPLIES (t - 1) < t
	
	% The subtype TCC (at line 105, column 12) in decl case2summation for  top
	    % expected type  naturalnumber
	  % is subsumed by concatenate_recur_TCC1
	% The subtype TCC (at line 121, column 28) in decl case2 for  x
	    % expected type  int
	  % is subsumed by case1_TCC1
	
	% Termination TCC generated (at line 144, column 8) for
	% case3subloop(j, i, (t - 1), concat(str, "0"))
	  % proved
	case3subloop_TCC2: OBLIGATION
	FORALL (i, t: int): NOT t = -1 AND NOT t = i IMPLIES (t - 1) < t
	
	% The subtype TCC (at line 146, column 12) in decl case3subloop for  t
	% expected type  naturalnumber
	% Termination TCC generated (at line 188, column 8) for
	% c4xvalsum1(yk, (i - 1), sum + (2 * 3 ^ i))
	  % untried
	c4xvalsum1_TCC1: OBLIGATION
	FORALL (i: int): NOT i = 0 IMPLIES (i - 1) < i
	
	% The subtype TCC (at line 146, column 12) in decl case3subloop for  t
	    % expected type  naturalnumber
	  % is subsumed by concatenate_recur_TCC1
	
	% The subtype TCC (at line 190, column 12) in decl c4xvalsum1 for  i
	% expected type  naturalnumber
	% The subtype TCC (at line 186, column 8) in decl c4xvalsum1 for  sum
	% expected type  int
	% Termination TCC generated (at line 196, column 8) for
	% c4xvalsum2(m, yk, (i - 1), sum + (3 ^ i))
	  % untried
	c4xvalsum2_TCC1: OBLIGATION
	FORALL (m, i: int): NOT i = m IMPLIES (i - 1) < i
	
	% The subtype TCC (at line 190, column 12) in decl c4xvalsum1 for  i
	    % expected type  naturalnumber
	  % is subsumed by concatenate_recur_TCC1
	% The subtype TCC (at line 186, column 8) in decl c4xvalsum1 for  sum
	    % expected type  int
	  % is subsumed by case1_TCC1
	
	% The subtype TCC (at line 198, column 12) in decl c4xvalsum2 for  i
	% expected type  naturalnumber
	% The subtype TCC (at line 194, column 8) in decl c4xvalsum2 for  sum
	% expected type  int
	% Subtype TCC generated (at line 201, column 4) for
	% ((4 * yk) - (c4xvalsum1(yk, m, 0) + c4xvalsum2(m, yk, (j - 3), 0))) /
	%  3 ^ (j - 2)
	% expected type  int
	  % untried
	case4xval_TCC1: OBLIGATION
	FORALL (m, j, yk: int):
	    integer_pred(((4 * yk) -
	                   (c4xvalsum1(yk, m, 0) + c4xvalsum2(m, yk, (j - 3), 0)))
	                  / 3 ^ (j - 2))
	
	% The subtype TCC (at line 198, column 12) in decl c4xvalsum2 for  i
	    % expected type  naturalnumber
	  % is subsumed by concatenate_recur_TCC1
	% The subtype TCC (at line 194, column 8) in decl c4xvalsum2 for  sum
	    % expected type  int
	  % is subsumed by case1_TCC1
	
	% Subtype TCC generated (at line 296, column 77) for  qj
	% expected type  nat
	  % untried
	mainfor_TCC1: OBLIGATION
	FORALL (j: int, qj: subrange(1, (j - 1))):
	         (NOT (qj = 1)) AND (NOT (qj = j - 1 AND j > 1))
	     AND (NOT (qj = 2 AND j > 2)) AND (NOT (qj = j - 2 AND j > 2))
	     AND printstr("Case 2 < qj < j - 2")
	     IMPLIES qj >= 0
	
	% Subtype TCC generated (at line 296, column 81) for  yk
	% expected type  nat
	  % untried
	mainfor_TCC2: OBLIGATION
	FORALL (j: int, yk: real, qj: subrange(1, (j - 1))):
	         (NOT (qj = 1)) AND (NOT (qj = j - 1 AND j > 1))
	     AND (NOT (qj = 2 AND j > 2)) AND (NOT (qj = j - 2 AND j > 2))
	     AND printstr("Case 2 < qj < j - 2")
	     IMPLIES rational_pred(yk) AND integer_pred(yk) AND yk >= 0
	
	% The subtype TCC (at line 287, column 46) in decl mainfor for  yk
	    % expected type  int
	  % is subsumed by case1_TCC1
	% The subtype TCC (at line 289, column 50) in decl mainfor for  yk
	    % expected type  int
	  % is subsumed by case1_TCC1
	% The subtype TCC (at line 291, column 46) in decl mainfor for  yk
	    % expected type  int
	  % is subsumed by case1_TCC1
	% The subtype TCC (at line 294, column 54) in decl mainfor for  yk
	    % expected type  int
	  % is subsumed by case1_TCC1

END algorithm2_TCCS