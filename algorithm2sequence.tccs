%% TCCs associated with theory algorithm2sequence
%% This file was automatically generated by PVS, please **do not modify** by hand.
algorithm2sequence_TCCS: THEORY BEGIN

	% Subtype TCC generated (at line 23, column 37) for
	% finseq_appl[finseq[char]]
	%     ((# length := 0, seq := LAMBDA (i: below[0]): "" #))
	% expected type  sequence[string]
	  % untried
	empty_string_seq_TCC1: OBLIGATION
	FORALL (x: nat): FALSE
	
	% The subtype TCC (at line 23, column 37) in decl empty_string_seq for
	%  finseq_appl[finseq[char]]
	%     ((# length := 0, seq := LAMBDA (i: below[0]): "" #))
	% expected type  sequence[string]
	% Subtype TCC generated (at line 42, column 55) for  (n - 1)
	% expected type  nat
	  % untried
	concatenate_recur_TCC1: OBLIGATION
	FORALL (n: nat, l: bool): NOT n <= 0 AND l = FALSE IMPLIES (n - 1) >= 0
	
	% The subtype TCC (at line 23, column 37) in decl empty_string_seq for
	    %  finseq_appl[finseq[char]]
	    %     ((# length := 0, seq := LAMBDA (i: below[0]): "" #))
	    % expected type  sequence[string]
	  % is subsumed by empty_string_seq_TCC1
	
	% Termination TCC generated (at line 42, column 8) for
	% concatenate_recur(concat(str_base, num), num, (n - 1), FALSE)
	  % untried
	concatenate_recur_TCC2: OBLIGATION
	FORALL (n: nat, l: bool): NOT n <= 0 AND l = FALSE IMPLIES (n - 1) < n
	
	% Subtype TCC generated (at line 45, column 55) for  (n - 1)
	% expected type  nat
	  % untried
	concatenate_recur_TCC3: OBLIGATION
	FORALL (n: nat, l: bool): NOT n <= 0 AND NOT l = FALSE IMPLIES (n - 1) >= 0
	
	% Termination TCC generated (at line 45, column 8) for
	% concatenate_recur(concat(num, str_base), num, (n - 1), TRUE)
	  % untried
	concatenate_recur_TCC4: OBLIGATION
	FORALL (n: nat, l: bool): NOT n <= 0 AND NOT l = FALSE IMPLIES (n - 1) < n
	
	% The subtype TCC (at line 67, column 55) in decl concatenate_recur_mod for  (n - 1)
	% expected type  nat
	% The subtype TCC (at line 70, column 55) in decl concatenate_recur_mod for  (n - 1)
	% expected type  nat
	% Subtype TCC generated (at line 87, column 43) for  (j - 2)
	% expected type  nat
	  % untried
	case1_TCC1: OBLIGATION
	FORALL (j: nat): (j - 2) >= 0
	
	% The subtype TCC (at line 67, column 55) in decl concatenate_recur_mod for  (n - 1)
	    % expected type  nat
	  % is subsumed by concatenate_recur_TCC1
	% The subtype TCC (at line 70, column 55) in decl concatenate_recur_mod for  (n - 1)
	    % expected type  nat
	  % is subsumed by concatenate_recur_TCC3
	
	% Subtype TCC generated (at line 103, column 24) for  (top - 1)
	% expected type  nat
	  % untried
	case2summation_TCC1: OBLIGATION
	FORALL (top: nat): NOT (top <= 1) IMPLIES (top - 1) >= 0
	
	% Termination TCC generated (at line 103, column 8) for
	% case2summation((top - 1), (sum + (3 ^ top)))
	  % untried
	case2summation_TCC2: OBLIGATION
	FORALL (top: nat): NOT (top <= 1) IMPLIES (top - 1) < top
	
	% The subtype TCC (at line 121, column 43) in decl case2 for  (j - 2)
	% expected type  nat
	% Subtype TCC generated (at line 141, column 12) for  t
	% expected type  naturalnumber
	  % untried
	case3subloop_TCC1: OBLIGATION
	FORALL (t: int): t >= 0
	
	% The subtype TCC (at line 121, column 43) in decl case2 for  (j - 2)
	    % expected type  nat
	  % is subsumed by case1_TCC1
	
	% Termination TCC generated (at line 137, column 8) for
	% case3subloop(j, i, (t - 1), concat(str, "1"))
	  % untried
	case3subloop_TCC2: OBLIGATION
	FORALL (i, t: int): NOT t = -1 AND t = i IMPLIES (t - 1) < t
	
	% Termination TCC generated (at line 139, column 8) for
	% case3subloop(j, i, (t - 1), concat(str, "0"))
	  % untried
	case3subloop_TCC3: OBLIGATION
	FORALL (i, t: int): NOT t = -1 AND NOT t = i IMPLIES (t - 1) < t
	
	% Subtype TCC generated (at line 162, column 29) for  i - 1
	% expected type  nat
	  % untried
	case3_TCC1: OBLIGATION
	FORALL (j: int, i: nat):
	    NOT (i = 0) IMPLIES
	     FORALL (str1: string):
	       str1 = case3subloop(j, i, j - 3, "") IMPLIES i - 1 >= 0
	
	% Termination TCC generated (at line 162, column 8) for
	% case3(k, j, yk, str, i - 1, add(str, seq))
	  % untried
	case3_TCC2: OBLIGATION
	FORALL (j: int, i: nat):
	    NOT (i = 0) IMPLIES
	     FORALL (str1: string):
	       str1 = case3subloop(j, i, j - 3, "") IMPLIES i - 1 < i
	
	% Subtype TCC generated (at line 188, column 43) for  (j - 2)
	% expected type  nat
	  % untried
	casem0_TCC1: OBLIGATION
	FORALL (j: int): (j - 2) >= 0
	
	% Subtype TCC generated (at line 203, column 47) for  (j - 3 - m)
	% expected type  nat
	  % untried
	casemnot0_TCC1: OBLIGATION
	FORALL (j, m: int): (j - 3 - m) >= 0
	
	% Subtype TCC generated (at line 204, column 47) for  (m)
	% expected type  nat
	  % untried
	casemnot0_TCC2: OBLIGATION
	FORALL (j, m: int, str: string, str1: string):
	    str1 = concatenate_recur(str, "1", (j - 3 - m), FALSE) IMPLIES (m) >= 0
	
	% Subtype TCC generated (at line 224, column 73) for  m - 1
	% expected type  nat
	  % untried
	case4loop_TCC1: OBLIGATION
	FORALL (k, j, yk: int, m: nat, seq: sequence[string]):
	    NOT (m = 0) IMPLIES
	     FORALL (seq1: sequence[string]):
	       seq1 = casemnot0(k, j, yk, m, "", seq) IMPLIES m - 1 >= 0
	
	% Termination TCC generated (at line 224, column 53) for
	% case4loop(k, j, yk, m - 1, "", seq)
	  % untried
	case4loop_TCC2: OBLIGATION
	FORALL (k, j, yk: int, m: nat, seq: sequence[string]):
	    NOT (m = 0) IMPLIES
	     FORALL (seq1: sequence[string]):
	       seq1 = casemnot0(k, j, yk, m, "", seq) IMPLIES m - 1 < m
	
	% Subtype TCC generated (at line 231, column 22) for
	% ((2 ^ (j - 1)) * (yk / 3))
	% expected type  int
	  % untried
	mainfor_TCC1: OBLIGATION
	FORALL (j, yk: int, qj: nat):
	    (qj = 1) IMPLIES integer_pred(((2 ^ (j - 1)) * (yk / 3)))
	
	% Subtype TCC generated (at line 235, column 26) for  qj - 1
	% expected type  nat
	  % untried
	mainfor_TCC2: OBLIGATION
	FORALL (k, j, yk: int, qj: nat, seq: sequence[string]):
	    NOT (qj = 1) AND (qj = j - 1) AND (j > 1) IMPLIES
	     FORALL (seq1: sequence[string]):
	       seq1 =
	        case2(k, yk, ((2 * yk) - case2summation((j - 2), 0)) / (3 ^ (j - 1)),
	              "", j, seq)
	        IMPLIES qj - 1 >= 0
	
	% Termination TCC generated (at line 235, column 8) for
	% mainfor(k, j, yk, qj - 1, seq)
	  % untried
	mainfor_TCC3: OBLIGATION
	FORALL (k, j, yk: int, qj: nat, seq: sequence[string]):
	    NOT (qj = 1) AND (qj = j - 1) AND (j > 1) IMPLIES
	     FORALL (seq1: sequence[string]):
	       seq1 =
	        case2(k, yk, ((2 * yk) - case2summation((j - 2), 0)) / (3 ^ (j - 1)),
	              "", j, seq)
	        IMPLIES qj - 1 < qj
	
	% Subtype TCC generated (at line 234, column 31) for
	% ((2 * yk) - case2summation((j - 2), 0)) / (3 ^ (j - 1))
	% expected type  int
	  % untried
	mainfor_TCC4: OBLIGATION
	FORALL (j, yk: int, qj: nat):
	    NOT (qj = 1) AND (qj = j - 1) AND (j > 1) IMPLIES
	     rational_pred(((2 * yk) - case2summation((j - 2), 0)) / (3 ^ (j - 1))) AND
	      integer_pred(((2 * yk) - case2summation((j - 2), 0)) / (3 ^ (j - 1)))
	
	% Subtype TCC generated (at line 239, column 29) for  qj - 1
	% expected type  nat
	  % untried
	mainfor_TCC5: OBLIGATION
	FORALL (k, j, yk: int, qj: nat, seq: sequence[string]):
	    NOT (qj = 1) AND NOT ((qj = j - 1) AND (j > 1)) AND qj = 2 AND j > 2
	     IMPLIES
	     FORALL (seq1: sequence[string]):
	       seq1 = case3(k, j, yk, "", j - 3, seq) IMPLIES qj - 1 >= 0
	
	% Termination TCC generated (at line 239, column 11) for
	% mainfor(k, j, yk, qj - 1, seq)
	  % untried
	mainfor_TCC6: OBLIGATION
	FORALL (k, j, yk: int, qj: nat, seq: sequence[string]):
	    NOT (qj = 1) AND NOT ((qj = j - 1) AND (j > 1)) AND qj = 2 AND j > 2
	     IMPLIES
	     FORALL (seq1: sequence[string]):
	       seq1 = case3(k, j, yk, "", j - 3, seq) IMPLIES qj - 1 < qj
	
	% Subtype TCC generated (at line 238, column 38) for  j - 3
	% expected type  nat
	  % untried
	mainfor_TCC7: OBLIGATION
	FORALL (j: int, qj: nat):
	    NOT (qj = 1) AND NOT ((qj = j - 1) AND (j > 1)) AND qj = 2 AND j > 2
	     IMPLIES j - 3 >= 0
	
	% Subtype TCC generated (at line 243, column 29) for  qj - 1
	% expected type  nat
	  % untried
	mainfor_TCC8: OBLIGATION
	FORALL (k, j, yk: int, qj: nat, seq: sequence[string]):
	         (NOT (qj = 1)) AND (NOT ((qj = j - 1) AND (j > 1)))
	     AND (NOT (qj = 2 AND j > 2)) AND (qj = j - 2) AND (j > 2)
	     IMPLIES
	     FORALL (seq1: sequence[string]):
	       seq1 = case4loop(k, j, yk, j - 3, "", seq) IMPLIES qj - 1 >= 0
	
	% Termination TCC generated (at line 243, column 11) for
	% mainfor(k, j, yk, qj - 1, seq)
	  % untried
	mainfor_TCC9: OBLIGATION
	FORALL (k, j, yk: int, qj: nat, seq: sequence[string]):
	         (NOT (qj = 1)) AND (NOT ((qj = j - 1) AND (j > 1)))
	     AND (NOT (qj = 2 AND j > 2)) AND (qj = j - 2) AND (j > 2)
	     IMPLIES
	     FORALL (seq1: sequence[string]):
	       seq1 = case4loop(k, j, yk, j - 3, "", seq) IMPLIES qj - 1 < qj
	
	% Subtype TCC generated (at line 242, column 38) for  j - 3
	% expected type  nat
	  % proved
	mainfor_TCC10: OBLIGATION
	FORALL (j: int, qj: nat):
	         (NOT (qj = 1)) AND (NOT ((qj = j - 1) AND (j > 1)))
	     AND (NOT (qj = 2 AND j > 2)) AND (qj = j - 2) AND (j > 2)
	     IMPLIES j - 3 >= 0
	
	% Subtype TCC generated (at line 245, column 26) for  qj - 1
	% expected type  nat
	  % untried
	mainfor_TCC11: OBLIGATION
	FORALL (j: int, qj: nat):
	         (NOT (qj = 1)) AND (NOT ((qj = j - 1) AND (j > 1)))
	     AND (NOT (qj = 2 AND j > 2)) AND (NOT (qj = j - 2 AND j > 2)) AND (qj > 2)
	     AND (qj < j - 2) AND (j > 5)
	     IMPLIES qj - 1 >= 0
	
	% Termination TCC generated (at line 245, column 8) for
	% mainfor(k, j, yk, qj - 1, seq)
	  % untried
	mainfor_TCC12: OBLIGATION
	FORALL (j: int, qj: nat):
	         (NOT (qj = 1)) AND (NOT ((qj = j - 1) AND (j > 1)))
	     AND (NOT (qj = 2 AND j > 2)) AND (NOT (qj = j - 2 AND j > 2)) AND (qj > 2)
	     AND (qj < j - 2) AND (j > 5)
	     IMPLIES qj - 1 < qj
	
	% Subtype TCC generated (at line 248, column 26) for  qj - 1
	% expected type  nat
	  % untried
	mainfor_TCC13: OBLIGATION
	FORALL (j: int, qj: nat):
	         (NOT (qj = 1)) AND (NOT ((qj = j - 1) AND (j > 1)))
	     AND (NOT (qj = 2 AND j > 2)) AND (NOT (qj = j - 2 AND j > 2))
	     AND NOT ((qj > 2) AND (qj < j - 2) AND (j > 5))
	     IMPLIES qj - 1 >= 0
	
	% Termination TCC generated (at line 248, column 8) for
	% mainfor(k, j, yk, qj - 1, seq)
	  % untried
	mainfor_TCC14: OBLIGATION
	FORALL (j: int, qj: nat):
	         (NOT (qj = 1)) AND (NOT ((qj = j - 1) AND (j > 1)))
	     AND (NOT (qj = 2 AND j > 2)) AND (NOT (qj = j - 2 AND j > 2))
	     AND NOT ((qj > 2) AND (qj < j - 2) AND (j > 5))
	     IMPLIES qj - 1 < qj
	
	% The subtype TCC (at line 231, column 51) in decl mainfor for  j
	% expected type  nat
	% The subtype TCC (at line 234, column 59) in decl mainfor for  (j - 2)
	% expected type  nat
	% The subtype TCC (at line 234, column 88) in decl mainfor for  j
	% expected type  nat
	% Subtype TCC generated (at line 268, column 23) for  (2 ^ (2 * k) - 1)
	% expected type  int
	  % untried
	alg2_TCC1: OBLIGATION
	FORALL (k, j: int):
	    NOT (k < 2) AND NOT (j < 1) IMPLIES integer_pred((2 ^ (2 * k) - 1))
	
	% The subtype TCC (at line 231, column 51) in decl mainfor for  j
	    % expected type  nat
	  % is subsumed by case3subloop_TCC1
	% The subtype TCC (at line 234, column 59) in decl mainfor for  (j - 2)
	    % expected type  nat
	  % is subsumed by casem0_TCC1
	% The subtype TCC (at line 234, column 88) in decl mainfor for  j
	    % expected type  nat
	  % is subsumed by case3subloop_TCC1
	
	% Subtype TCC generated (at line 268, column 39) for  j - 1
	% expected type  nat
	  % untried
	alg2_TCC2: OBLIGATION
	FORALL (k, j: int): NOT (k < 2) AND NOT (j < 1) IMPLIES j - 1 >= 0
	
	% Subtype TCC generated (at line 291, column 32) for  i
	% expected type  below[length(str)]
	  % untried
	allZeros_TCC1: OBLIGATION
	FORALL (str: string, len: nat):
	    NOT (len = 0) IMPLIES FORALL (i: below[len]): i < str`length
	
	% Subtype TCC generated (at line 291, column 37) for  "0"
	% expected type  {fs | fs`length = 1}
	  % untried
	allZeros_TCC2: OBLIGATION
	FORALL (len: nat):
	    NOT (len = 0) IMPLIES FORALL (i: below[len]): "0"`length = 1
	
	% Subtype TCC generated (at line 304, column 37) for  "1"
	% expected type  {fs | fs`length = 1}
	  % untried
	allOnes_TCC1: OBLIGATION
	FORALL (len: nat):
	    NOT (len = 0) IMPLIES FORALL (i: below[len]): "1"`length = 1
	
	% The subtype TCC (at line 304, column 32) in decl allOnes for  i
	% expected type  below[str`length]
	% Subtype TCC generated (at line 320, column 25) for  len - 1
	% expected type  nat
	  % untried
	countZeroes_TCC1: OBLIGATION
	FORALL (str: string, len: nat):
	    NOT (len = 0 AND strcmp((substr(str, len, len)), "0", TRUE) = 0) AND
	     NOT len = 0 AND strcmp((substr(str, len, len)), "0", TRUE) = 0
	     IMPLIES len - 1 >= 0
	
	% The subtype TCC (at line 304, column 32) in decl allOnes for  i
	    % expected type  below[str`length]
	  % is subsumed by allZeros_TCC1
	
	% Termination TCC generated (at line 320, column 8) for
	% countZeroes(str, len - 1, count + 1)
	  % untried
	countZeroes_TCC2: OBLIGATION
	FORALL (str: string, len: nat):
	    NOT (len = 0 AND strcmp((substr(str, len, len)), "0", TRUE) = 0) AND
	     NOT len = 0 AND strcmp((substr(str, len, len)), "0", TRUE) = 0
	     IMPLIES len - 1 < len
	
	% Subtype TCC generated (at line 322, column 25) for  len - 1
	% expected type  nat
	  % untried
	countZeroes_TCC3: OBLIGATION
	FORALL (str: string, len: nat):
	    NOT (len = 0 AND strcmp((substr(str, len, len)), "0", TRUE) = 0) AND
	     NOT len = 0 AND NOT strcmp((substr(str, len, len)), "0", TRUE) = 0
	     IMPLIES len - 1 >= 0
	
	% Termination TCC generated (at line 322, column 8) for
	% countZeroes(str, len - 1, count)
	  % untried
	countZeroes_TCC4: OBLIGATION
	FORALL (str: string, len: nat):
	    NOT (len = 0 AND strcmp((substr(str, len, len)), "0", TRUE) = 0) AND
	     NOT len = 0 AND NOT strcmp((substr(str, len, len)), "0", TRUE) = 0
	     IMPLIES len - 1 < len
	
	% Subtype TCC generated (at line 339, column 23) for  len - 1
	% expected type  nat
	  % untried
	countOnes_TCC1: OBLIGATION
	FORALL (str: string, len: nat):
	    NOT (len = 0 AND strcmp((substr(str, len, len)), "1", TRUE) = 0) AND
	     NOT len = 0 AND strcmp((substr(str, len, len)), "1", TRUE) = 0
	     IMPLIES len - 1 >= 0
	
	% Termination TCC generated (at line 339, column 8) for
	% countOnes(str, len - 1, count + 1)
	  % untried
	countOnes_TCC2: OBLIGATION
	FORALL (str: string, len: nat):
	    NOT (len = 0 AND strcmp((substr(str, len, len)), "1", TRUE) = 0) AND
	     NOT len = 0 AND strcmp((substr(str, len, len)), "1", TRUE) = 0
	     IMPLIES len - 1 < len
	
	% Subtype TCC generated (at line 341, column 23) for  len - 1
	% expected type  nat
	  % untried
	countOnes_TCC3: OBLIGATION
	FORALL (str: string, len: nat):
	    NOT (len = 0 AND strcmp((substr(str, len, len)), "1", TRUE) = 0) AND
	     NOT len = 0 AND NOT strcmp((substr(str, len, len)), "1", TRUE) = 0
	     IMPLIES len - 1 >= 0
	
	% Termination TCC generated (at line 341, column 8) for
	% countOnes(str, len - 1, count)
	  % untried
	countOnes_TCC4: OBLIGATION
	FORALL (str: string, len: nat):
	    NOT (len = 0 AND strcmp((substr(str, len, len)), "1", TRUE) = 0) AND
	     NOT len = 0 AND NOT strcmp((substr(str, len, len)), "1", TRUE) = 0
	     IMPLIES len - 1 < len
	
	% The subtype TCC (at line 415, column 43) in decl case1string for  (j - 2)
	    % expected type  nat
	  % is subsumed by casem0_TCC1

END algorithm2sequence_TCCS