("Collatz" Collatz bv8_TCC1 0 (bv8_TCC1-1 nil 3928954593 ("" (subtype-tcc) nil nil) nil nil (bv8 subtype "1001" "naturalnumbers.below(exp2.exp2(4))")))("Collatz" Collatz bv3_TCC1 0 (bv3_TCC1-1 nil 3928954593 ("" (subtype-tcc) nil nil) nil nil (bv3 subtype "110" "naturalnumbers.below(exp2.exp2(3))")))("Collatz" Collatz bvithdigit_TCC1 0 (bvithdigit_TCC1-1 nil 3928954593 ("" (subtype-tcc) nil nil) nil nil (bvithdigit subtype "Collatz.x" "naturalnumbers.below(4)")))("Collatz" Collatz iter_test_TCC1 0 (iter_test_TCC1-1 nil 3928954593 ("" (subtype-tcc) nil nil) nil nil (iter_test subtype "for_iterate[real].for(0, 4, 1, restrict[[int, real], [integers.subrange(0, 4), real], numfield].restrict(LAMBDA (i: integers.int, a: reals.real): number_fields.*(a, Collatz.x)))" "int")))("Collatz" Collatz totaltrue_TCC1 0 (totaltrue_TCC1-1 nil 3928954593 ("" (subtype-tcc) nil nil) nil nil (totaltrue subtype "for_iterate[real].for(0, 4, 1, restrict[[int, real], [integers.subrange(0, 4), real], numfield].restrict(LAMBDA (i: integers.int, a: reals.real): number_fields.*(a, Collatz.bvtoari(Collatz.x))))" "int")))("Collatz" Collatz totalone_TCC1 0 (totalone_TCC1-1 nil 3928954593 ("" (subtype-tcc) nil nil) nil nil (totalone subtype "Collatz.i" "nat")))("Collatz" Collatz totalone_TCC2 0 (totalone_TCC2-1 nil 3928954593 ("" (subtype-tcc) nil nil) nil nil (totalone subtype "for_iterate[real].for(0, 4, 1, restrict[[int, real], [integers.subrange(0, 4), real], numfield].restrict(LAMBDA (i: integers.int, a: reals.real): (number_fields.+)(a, 1)))" "int")))("Collatz" Collatz is_power_of_two_TCC1 0 (is_power_of_two_TCC1-1 nil 3927555792 ("" (subtype-tcc) nil nil) nil nil (is_power_of_two subtype "Collatz.x" "naturalnumber")))("Collatz" Collatz is_power_of_two_TCC2 0 (is_power_of_two_TCC2-1 nil 3927555792 ("" (termination-tcc) nil nil) nil nil (is_power_of_two termination "Collatz.is_power_of_two(number_fields./(Collatz.x, 2))" "nil")))("Collatz" Collatz ymultiplecases_TCC1 0 (ymultiplecases_TCC1-1 nil 3928954593 ("" (subtype-tcc) nil nil) nil nil (ymultiplecases subtype "Collatz.i" "naturalnumbers.below(Collatz.bvlength)")))("Collatz" Collatz ycases_TCC1 0 (ycases_TCC1-1 nil 3928954593 ("" (subtype-tcc) nil nil) nil nil (ycases subtype "Collatz.x" "posnat")))("Collatz" Collatz iteratebv_TCC1 0 (iteratebv_TCC1-1 nil 3928954593 ("" (subtype-tcc) nil nil) nil nil (iteratebv subtype "Collatz.k" "naturalnumbers.below(Collatz.bvlength)")))("Collatz" Collatz iteratebv_TCC2 0 (iteratebv_TCC2-1 nil 3928954593 ("" (subtype-tcc) nil nil) nil nil (iteratebv subtype "(number_fields./(Collatz.x, 2))" "int")))("Collatz" Collatz bv4_TCC1 0 (bv4_TCC1-1 nil 3928954593 ("" (subtype-tcc) nil nil) nil nil (bv4 subtype "101" "naturalnumbers.below(exp2.exp2(4))")))