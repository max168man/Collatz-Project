%% TCCs associated with theory algorithm2mod
%% This file was automatically generated by PVS, please **do not modify** by hand.
algorithm2mod_TCCS: THEORY BEGIN

	% Subtype TCC generated (at line 33, column 12) for  n
	% expected type  naturalnumber
	  % untried
	concatenate_recur_TCC1: OBLIGATION
	FORALL (n: int): n >= 0
	
	% Termination TCC generated (at line 28, column 8) for
	% concatenate_recur(concat(str_base, num), num, (n - 1), FALSE)
	  % untried
	concatenate_recur_TCC2: OBLIGATION
	FORALL (n: int, l: bool): NOT n <= 0 AND l = FALSE IMPLIES (n - 1) < n
	
	% Termination TCC generated (at line 31, column 8) for
	% concatenate_recur(concat(num, str_base), num, (n - 1), TRUE)
	  % untried
	concatenate_recur_TCC3: OBLIGATION
	FORALL (n: int, l: bool): NOT n <= 0 AND NOT l = FALSE IMPLIES (n - 1) < n
	
	% Subtype TCC generated (at line 74, column 27) for  x
	% expected type  int
	  % untried
	case1_TCC1: OBLIGATION
	FORALL (x: real): rational_pred(x) AND integer_pred(x)
	
	% Termination TCC generated (at line 94, column 8) for
	% case2summation((top - 1), (sum + (3 ^ top)))
	  % untried
	case2summation_TCC1: OBLIGATION
	FORALL (top: int): NOT top = 1 AND NOT top = 0 IMPLIES (top - 1) < top
	
	% The subtype TCC (at line 96, column 12) in decl case2summation for  top
	% expected type  naturalnumber
	% The subtype TCC (at line 112, column 28) in decl case2 for  x
	% expected type  int
	% Termination TCC generated (at line 133, column 8) for
	% case3subloop(j, i, (t - 1), concat(str, "1"))
	  % untried
	case3subloop_TCC1: OBLIGATION
	FORALL (i, t: int): NOT t = -1 AND t = i IMPLIES (t - 1) < t
	
	% The subtype TCC (at line 96, column 12) in decl case2summation for  top
	    % expected type  naturalnumber
	  % is subsumed by concatenate_recur_TCC1
	% The subtype TCC (at line 112, column 28) in decl case2 for  x
	    % expected type  int
	  % is subsumed by case1_TCC1
	
	% Termination TCC generated (at line 135, column 8) for
	% case3subloop(j, i, (t - 1), concat(str, "0"))
	  % untried
	case3subloop_TCC2: OBLIGATION
	FORALL (i, t: int): NOT t = -1 AND NOT t = i IMPLIES (t - 1) < t
	
	% The subtype TCC (at line 137, column 12) in decl case3subloop for  t
	% expected type  naturalnumber
	% Termination TCC generated (at line 179, column 8) for
	% c4xvalsum1(yk, (i - 1), sum + (2 * 3 ^ i))
	  % untried
	c4xvalsum1_TCC1: OBLIGATION
	FORALL (i: int): NOT i = 0 IMPLIES (i - 1) < i
	
	% The subtype TCC (at line 137, column 12) in decl case3subloop for  t
	    % expected type  naturalnumber
	  % is subsumed by concatenate_recur_TCC1
	
	% The subtype TCC (at line 181, column 12) in decl c4xvalsum1 for  i
	% expected type  naturalnumber
	% The subtype TCC (at line 177, column 8) in decl c4xvalsum1 for  sum
	% expected type  int
	% Termination TCC generated (at line 187, column 8) for
	% c4xvalsum2(m, yk, (i - 1), sum + (3 ^ i))
	  % untried
	c4xvalsum2_TCC1: OBLIGATION
	FORALL (m, i: int): NOT i = m IMPLIES (i - 1) < i
	
	% The subtype TCC (at line 181, column 12) in decl c4xvalsum1 for  i
	    % expected type  naturalnumber
	  % is subsumed by concatenate_recur_TCC1
	% The subtype TCC (at line 177, column 8) in decl c4xvalsum1 for  sum
	    % expected type  int
	  % is subsumed by case1_TCC1
	
	% The subtype TCC (at line 189, column 12) in decl c4xvalsum2 for  i
	% expected type  naturalnumber
	% The subtype TCC (at line 185, column 8) in decl c4xvalsum2 for  sum
	% expected type  int
	% Subtype TCC generated (at line 192, column 4) for
	% ((4 * yk) - (c4xvalsum1(yk, m, 0) + c4xvalsum2(m, yk, (j - 3), 0))) /
	%  3 ^ (j - 2)
	% expected type  int
	  % untried
	case4xval_TCC1: OBLIGATION
	FORALL (m, j, yk: int):
	    integer_pred(((4 * yk) -
	                   (c4xvalsum1(yk, m, 0) + c4xvalsum2(m, yk, (j - 3), 0)))
	                  / 3 ^ (j - 2))
	
	% The subtype TCC (at line 189, column 12) in decl c4xvalsum2 for  i
	    % expected type  naturalnumber
	  % is subsumed by concatenate_recur_TCC1
	% The subtype TCC (at line 185, column 8) in decl c4xvalsum2 for  sum
	    % expected type  int
	  % is subsumed by case1_TCC1
	
	% The subtype TCC (at line 278, column 21) in decl mainfor for  yk
	    % expected type  int
	  % is subsumed by case1_TCC1
	% The subtype TCC (at line 278, column 55) in decl mainfor for  j
	    % expected type  nat
	  % is subsumed by concatenate_recur_TCC1
	% The subtype TCC (at line 280, column 21) in decl mainfor for  yk
	    % expected type  int
	  % is subsumed by case1_TCC1
	% The subtype TCC (at line 280, column 82) in decl mainfor for  j
	    % expected type  nat
	  % is subsumed by concatenate_recur_TCC1
	% The subtype TCC (at line 282, column 24) in decl mainfor for  yk
	    % expected type  int
	  % is subsumed by case1_TCC1

END algorithm2mod_TCCS