(algorithm3markII
 (seq1_TCC1 0
  (seq1_TCC1-1 nil 3932238006 ("" (grind) nil nil)
   ((boolean nonempty-type-decl nil booleans nil)
    (bool nonempty-type-eq-decl nil booleans nil)
    (NOT const-decl "[bool -> bool]" booleans nil)
    (number nonempty-type-decl nil numbers nil)
    (number_field_pred const-decl "[number -> boolean]" number_fields
     nil)
    (number_field nonempty-type-from-decl nil number_fields nil)
    (real_pred const-decl "[number_field -> boolean]" reals nil)
    (real nonempty-type-from-decl nil reals nil)
    (< const-decl "bool" reals nil)
    (rational_pred const-decl "[real -> boolean]" rationals nil)
    (rational nonempty-type-from-decl nil rationals nil)
    (integer_pred const-decl "[rational -> boolean]" integers nil)
    (int nonempty-type-eq-decl nil integers nil)
    (>= const-decl "bool" reals nil)
    (nat nonempty-type-eq-decl nil naturalnumbers nil)
    (below type-eq-decl nil nat_types nil)
    (seq type-eq-decl nil more_finseq nil)
    (finseq type-eq-decl nil finite_sequences nil)
    (finite_sequence type-eq-decl nil finite_sequences nil)
    (real_lt_is_strict_total_order name-judgement
     "(strict_total_order?[real])" real_props nil)
    (empty_seq const-decl "finseq" finite_sequences nil)
    (empty_seq_int const-decl "finite_sequence[int]" algorithm3markII
     nil)
    (add const-decl "finseq[T]" more_finseq nil))
   nil
   (seq1 subtype
    "more_finseq[real].add(1, algorithm3markII.empty_seq_int)"
    "finite_sequence[int]")))
 (seq2_TCC1 0
  (seq2_TCC1-1 nil 3932238006 ("" (subtype-tcc) nil nil) nil nil
   (seq2 subtype "more_finseq[real].add(2, algorithm3markII.seq1)"
    "finite_sequence[int]")))
 (seq3_TCC1 0
  (seq3_TCC1-1 nil 3932238006 ("" (subtype-tcc) nil nil) nil nil
   (seq3 subtype "more_finseq[real].add(3, algorithm3markII.seq2)"
    "finite_sequence[int]")))
 (seq4_TCC1 0
  (seq4_TCC1-1 nil 3932238006 ("" (subtype-tcc) nil nil) nil nil
   (seq4 subtype
    "more_finseq[real].add(4, more_finseq[real].add(3, more_finseq[real].add(2, more_finseq[real].add(1, algorithm3markII.empty_seq_int))))"
    "finite_sequence[int]")))
 (caseNnotgreaterthan1_accept_TCC1 0
  (caseNnotgreaterthan1_accept_TCC1-1 nil 3932238006
   ("" (subtype-tcc) nil nil) nil nil
   (caseNnotgreaterthan1_accept subtype "algorithm3markII.x" "nat")))
 (caseNnotgreaterthan1_accept_TCC2 0
  (caseNnotgreaterthan1_accept_TCC2-1 nil 3932238006
   ("" (subtype-tcc) nil nil) nil nil
   (caseNnotgreaterthan1_accept subtype "algorithm3markII.x" "nat")))
 (caseNnotgreaterthan1_accept_TCC3 0
  (caseNnotgreaterthan1_accept_TCC3-1 nil 3932238006
   ("" (subtype-tcc) nil nil) nil nil
   (caseNnotgreaterthan1_accept subtype
    "(number_fields.+)(algorithm3markII.x, 1)" "nat"))))

